{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchFields","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","target","value","fetch","res","json","users","catch","err","console","log","filterRobots","filter","robot","toLowerCase","includes","length","React","ReactDOM","render","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCWCQ,EAhBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAOC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAMA,UAAU,YAAYC,IAAG,+BAA0BF,EAA1B,WAAuCG,IAAG,UAAKH,KAC9E,gCACI,6BACKF,IAEL,4BACKC,WCYNK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKlBC,EAdG,SAAC,GAAkC,EAAhCC,aAAiC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACI,8BACI,uBACIV,UAAU,mCACVW,KAAK,SACLd,KAAK,SACLe,YAAY,gBACZC,SAAUH,OCAXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,WACIC,KAAKC,SAAS,CAACF,UAAU,M,oBAG7B,WACI,OAAGC,KAAKF,MAAMC,SACH,0DAGJC,KAAKT,MAAMK,a,GAjBEM,aCiDbC,G,wDA1CX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVhB,aAAcoB,EAAMC,OAAOC,SAR/B,EAAKT,MAAQ,CACTlB,OAAQ,GACRK,aAAc,IAJR,E,qDAcd,WAAqB,IAAD,OAChBuB,MAAM,8CACD1C,MAAK,SAAA2C,GAAG,OAAIA,EAAIC,UAChB5C,MAAK,SAAA6C,GAAK,OAAI,EAAKV,SAAS,CAACrB,OAAQ+B,OACrCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzBD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAGlC,WAAS,IAAD,EAC6Bb,KAAKF,MAA9BlB,EADJ,EACIA,OAAQK,EADZ,EACYA,aACV+B,EAAepC,EAAOqC,QAAO,SAAAC,GAC/B,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASnC,EAAakC,kBAE1D,OAAQvC,EAAOyC,OAEX,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQoC,WAPV,6C,GA5BbM,IAAMpB,YCDzBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjD/D,M","file":"static/js/main.92290df7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name , email, id}) =>{\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\n            <img  className='w-50 h-20' src={`https://robohash.org/${id}200x200`} alt={`${id}`} />\n            <div>\n                <h3>\n                    {name}\n                </h3>\n                <p>\n                    {email}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\n    return(\n        <div>\n           {\n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={i} \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email} \n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchFields, searchChange}) => {\n    return(\n        <div>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                name='search' \n                placeholder='Search Robots'\n                onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(){\n        this.setState({hasError: true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops that is not good!</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n\n","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundry';\n\nimport './App.css';\n\nclass  App extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchFields: ''\n        }\n    }\n\n    onSearchChange = (event) => {\n        this.setState({\n            searchFields: event.target.value\n        })\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(users => this.setState({robots: users}))\n            .catch(err => console.log(err))\n            .catch(err => console.log(err))\n    }\n\n    render(){\n        const { robots, searchFields } = this.state;\n        const filterRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchFields.toLowerCase());\n        })\n        return !robots.length ? <h1>Loading</h1> :\n        (\n            <div className='tc'>\n                <h2 className='f1'>RoboFriends</h2>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filterRobots}/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App  from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}